/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Ventanas;

import Agents.AgenteAgenciaTurismo;
import Agents.AgenteTransporte;
import jade.core.AID;
import jade.domain.DFService;
import jade.domain.FIPAAgentManagement.DFAgentDescription;
import jade.domain.FIPAAgentManagement.ServiceDescription;
import jade.domain.FIPAException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Torre
 */
public class VentanaDFServicios extends javax.swing.JFrame {

    AgenteAgenciaTurismo miAgente;
    private String[] lugares;
    private String [] transportes;
    DFAgentDescription [] resultadosTransporte;
    DFAgentDescription [] resultadosLugar;
    
    /**
     * Creates new form VentanaDFServicios
     */
    public VentanaDFServicios(AgenteAgenciaTurismo a) {
        super(a.getLocalName());
	miAgente = a;
        getTransportes();
        getLugares();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        alojamientos = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        empresasTransporte = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        aceptar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        alojamientos.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return lugares.length; }
            public Object getElementAt(int i) { return lugares[i]; }
        });
        jScrollPane1.setViewportView(alojamientos);

        empresasTransporte.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return transportes.length; }
            public Object getElementAt(int i) { return transportes[i]; }
        });
        jScrollPane2.setViewportView(empresasTransporte);

        jLabel1.setText("Asignar Servicios");

        jLabel2.setText("Alojamientos");

        jLabel3.setText("Empresas de Tranportes");

        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(154, 154, 154))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(aceptar)
                .addGap(30, 30, 30)
                .addComponent(cancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptar)
                    .addComponent(cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        // TODO add your handling code here:
        int[] seleccionLugar = alojamientos.getSelectedIndices();
        int[] seleccionTransporte = empresasTransporte.getSelectedIndices();
        AID[] lugaresAID = new AID[seleccionLugar.length];
        AID[] transportesAID = new AID[seleccionTransporte.length];
        for(int index: seleccionLugar){
            lugaresAID[index]=resultadosLugar[seleccionLugar[index]].getName();
        }
        for(int index: seleccionTransporte){
            transportesAID[index]= resultadosTransporte[seleccionLugar[index]].getName();
        }
        miAgente.asignarServicios(lugaresAID, transportesAID);
        dispose();
    }//GEN-LAST:event_aceptarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void getTransportes(){
       ServiceDescription servicio = new ServiceDescription();
       servicio.setType("Transporte");
       DFAgentDescription descripcion = new DFAgentDescription();
       descripcion.addServices(servicio);
       try {
           resultadosTransporte = DFService.search(miAgente, descripcion);
           transportes = new String [resultadosTransporte.length];
           for (int i=0; i < resultadosTransporte.length; ++i)
           {
               transportes [i] = resultadosTransporte [i].getName().getLocalName();
           }
       } catch (FIPAException ex) {
            Logger.getLogger(VentanaDFServicios.class.getName()).log(Level.SEVERE, null, ex);
        }
               
       
    }
    
        private void getLugares(){
       ServiceDescription servicio = new ServiceDescription();
       servicio.setType("Lugar");
       DFAgentDescription descripcion = new DFAgentDescription();
       descripcion.addServices(servicio);
       try {
           resultadosLugar = DFService.search(miAgente, descripcion);
           lugares = new String [resultadosLugar.length];
           for (int i=0; i < resultadosLugar.length; ++i)
           {
               lugares [i] = resultadosLugar [i].getName().getLocalName();
           }
       } catch (FIPAException ex) {
            Logger.getLogger(VentanaDFServicios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JList alojamientos;
    private javax.swing.JButton cancelar;
    private javax.swing.JList empresasTransporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
